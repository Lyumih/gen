namespace $ {
	/**
	 * –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (—É–º–µ–Ω–∏—è, –ø—Ä–µ–¥–º–µ—Ç—ã –∏ —Ç.–¥.)
	 */
	export class $gen_engine_item extends $gen_engine_entity {

		defaults() {
			return {
				// id: $mol_guid(),
				id_root: 'id-root-' + $mol_guid(),
				name: 'no name',
				icon: 'üì¶',
				reference: '',
				type: 'item',
				part: 'part',
				description: 'no description',
				level: 0,
				points: 0,
				x: 0,
				y: 0,
				speed: 1,
				attack_range: 1
			}
		}

		factory() {

		}

		/** –ö–æ—Ä–Ω–µ–≤–æ–π id –ø—Ä–µ–¥–º–µ—Ç–∞ (—é–Ω–∏—Ç–∞). –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–∞–∫–æ–π-—Ç–æ –¥—Ä—É–≥–æ–π –±–∞–∑—ã */
		id_root( next?: string ) {
			return this.value( 'id_root', next )
		}

		log( text: string ) {
		}

		/** –ò—Å—Ç–æ—á–Ω–∏–∫ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è */
		reference( next?: string ) {
			return this.value( 'reference', next )
		}

		/** –¢–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞: unit/skill/equipment/prop/talent */
		type( next?: string ) {
			return this.value( 'type', next )
		}

		/** –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —á–∞—Å—Ç—å –æ—Ç type: –¥–ª—è equipment: weapon/armor/head/gloves, –¥–ª—è unit: hero/enemy/summon –∏ —Ç.–¥. */
		part( next?: string ) {
			return this.value( 'part', next )
		}

		/** –ò–º—è –ø—Ä–µ–¥–º–µ—Ç–∞ */
		name( next?: string ) {
			return this.value( 'name', next )
		}

		/** –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–∞—è –∏–∫–æ–Ω–∫–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: üßôüèº‚Äç‚ôÇÔ∏è */
		icon( next?: string ) {
			return this.value( 'icon', next )
		}

		/** –ò–∫–æ–Ω–∫–∞ —Å –∏–º–µ–Ω–µ–º. –ù–∞–ø—Ä–∏–º–µ—Ä: üßôüèº‚Äç‚ôÇÔ∏èJin */
		icon_name( next?: string ) {
			return this.icon() + this.name()
		}

		/** –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ */
		description( next?: string ) {
			return this.value( 'description', next )
		}

		/** —É—Ä–æ–≤–µ–Ω—å –ø—Ä–µ–¥–º–µ—Ç–∞ */
		level( next?: number ) {
			return this.value( 'level', next )
		}

		/** –ë—ã—Å—Ç—Ä–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ —Å —É—Ä–æ–≤–Ω–µ–º. –ù–∞–ø—Ä–∏–º–µ—Ä: ‚≠ê4 */
		icon_level() {
			return '‚≠ê' + this.level()
		}

		/** –°–≤–æ–±–æ–¥–Ω—ã–µ –æ—á–∫–∏ —á–µ–≥–æ-–ª–∏–±–æ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞—Ç—å –Ω–∞ —É–ª—É—á—à–µ–Ω–∏–µ */
		points( next?: number ) {
			return this.value( 'points', next )
		}

		/** –ë—ã—Å—Ç—Ä–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ —Å –æ—á–∫–∞–º–∏. –ù–∞–ø—Ä–∏–º–µ—Ä: üíé5 */
		icon_points() {
			return 'üíé' + this.points()
		}

		/** –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø—Ä–µ–¥–º–µ—Ç–∞ x. –î–ª—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è —ç—Ç–æ —è—á–µ–π–∫–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ, –¥–ª—è —é–Ω–∏—Ç–∞ —ç—Ç–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞ –ø–æ–ª–µ */
		x( next?: number ) {
			return this.value( 'x', next )
		}

		/** –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø—Ä–µ–¥–º–µ—Ç–∞ y. –î–ª—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è —ç—Ç–æ —è—á–µ–π–∫–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ, –¥–ª—è —é–Ω–∏—Ç–∞ —ç—Ç–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞ –ø–æ–ª–µ */
		y( next?: number ) {
			return this.value( 'y', next )
		}

		xy() {
			return [ this.x(), this.y() ]
		}

		in_range( x: number, y: number, range: number ) {
			return Math.abs( this.x() - x ) <= range && Math.abs( this.y() - y ) <= range
		}

		/** –°–∫–æ—Ä–æ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç–∞. –î–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ - —ç—Ç–æ –¥–∞–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –≤ –∫–ª–µ—Ç–∫–∞—Ö */
		speed( next?: number ) {
			return this.value( 'speed', next )
		}

		icon_speed() {
			return 'üëü' + this.speed()
		}

		//** –î–∞–ª—å–Ω–æ—Å—Ç—å –∞—Ç–∞–∫–∏ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –æ—Ä—É–∂–∏—è, —É–º–µ–Ω–∏—è */
		attack_range( next?: number ) {
			return this.value( 'attack_range', next )
		}

		icon_attack_range() {
			return 'üèπ' + this.attack_range()
		}

		move( x: number, y: number ) {
			if( this.x() !== x || this.y() !== y ) {
				this.x( x )
				this.y( y )
			}
		}

	}
}
